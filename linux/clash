#!/bin/bash

#!/bin/bash

# 定义颜色变量
GREEN='\033[0;32m'
NC='\033[0m' # 没有颜色

echo "┌───────────────────────────────────────────────┐"

echo -e "│ ${GREEN}服务器联网2.0 by Haolong Ma${NC}                   │"
echo -e "│ ${GREEN}该软件遵守GPLv3开源协议${NC}                       │"
echo -e "│ ${GREEN}如有任何问题，请联系作者${NC}                      │"

echo "└───────────────────────────────────────────────┘"


mkdir -p ~/.config

touch ~/.config/ip.txt
touch ~/.config/port.txt


PORT_FILE="$HOME/.config/port.txt"

# 判断文件是否存在
if [[ ! -f "$PORT_FILE" ]]; then
    echo "10809" > "$PORT_FILE"
fi


function valid_ip() {
    local ip=$1
    if [[ $ip =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
        for octet in ${ip//./ }; do
            if (( octet < 0 || octet > 255 )); then
                return 1
            fi
        done
        return 0  # IP有效
    else
        return 1  # IP无效
    fi
}

# 提示用户输入IP地址
while true; do
    read -p "请输入IP地址（或直接按回车跳过）: " ip

    if [[ -z "$ip" ]]; then
        break
    fi

    if valid_ip "$ip"; then
        echo "$ip" > ~/.config/ip.txt
        echo "IP地址已保存至ip.txt"
        break
    else
        echo "无效的IP地址，请重新输入。"
    fi
done

# 提示用户输入端口号并验证
while true; do
    read -p "请输入端口号（或直接按回车跳过，不建议修改）: " port

    if [[ -z "$port" ]]; then
        break
    fi

    if [[ $port =~ ^[0-9]+$ ]] && (( port >= 1 && port <= 65535 )); then
        echo "$port" > ~/.config/port.txt
        echo "端口号已保存至port.txt"
        break
    else
        echo "无效的端口号，请重新输入。"
    fi
done


# 定义颜色变量
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # 没有颜色

IP_FILE="$HOME/.config/ip.txt"
PORT_FILE="$HOME/.config/port.txt"

if [[ ! -f "$IP_FILE" || ! -f "$PORT_FILE" ]]; then
    echo -e "${RED}配置文件未找到。请确保~/.config/ip.txt 和 ~/.config/port.txt 存在。${NC}"
    exit 1
fi

# 获取IP和端口
IP=$(cat "$IP_FILE")
PORT=$(cat "$PORT_FILE")

# 定义代理
PROXY="$IP:$PORT"

function test_site() {
    local url=$1
    local success_message=$2
    local fail_message=$3

    result=$(curl -x "$PROXY" -s -o /dev/null -w "%{time_total}" --connect-timeout 3 "$url")

    if [[ $? -ne 0 ]]; then
        echo -e "${RED}$fail_message${NC}"
        exit 1
    else
        echo -e "${GREEN}$success_message 延迟: ${result} 秒${NC}"
    fi
}

# 验证百度连接
test_site "http://www.baidu.com" \
    "可以正常连接互联网" \
    "无法正常连接互联网，请检查ip是否输入错误"

# 验证谷歌连接
test_site "https://www.google.com" \
    "可以科学上网" \
    "无法科学上网"


